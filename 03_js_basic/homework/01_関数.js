/**
 * 問1. 宣言されたtest1関数を実行してください
 */
function test1() {
  console.log("----- これが出力されれば成功");
}
test1()

/**
 * 問2. 実行されるtest2関数を宣言してください。関数内ではconsoleで自分のslack名を出力してください
 */
function test2() {
  console.log("シマザキタカシ");
}
test2();

/**
 * 問3. 下記test3関数は実行されるかどうか、推測・確認してください
 * 確認後、実行結果に対して、なぜこの実行結果になったのか説明してください
 */
function test3() {
  console.log("====================");
}
test3;

/**
 * 問3. 回答欄
 * ()がないため実行されず、何も起きない。
 */

/**
 * 問4. 下記test4関数の実行結果がconsoleで
 * '引数を入れた実行結果'
 * という文字列が表示されるように引数を入れてください
 */
function test4(arg) {
  console.log(arg);
}
test4("引数を入れた実行結果");

/**
 * 問5. 下記test5関数の引数にデフォルトの値を付与しました。
 * 引数のデフォルト値がどのような動きをするのか、検証の上、説明して下さい
 */
function test5(arg = "default param") {
  console.log(arg);
}
test5();
test5("arg");

/**
 * 問5. 回答欄
 * 引数をセットせずに呼び出すと、デフォルトである"default param"が表示される。
 * 引数をセットした場合は、その値を受け取ってそれを表示する。
 */

/**
 * 問6. 下記test6関数の引数に、値ではなく、関数を入れました。
 * 引数に関数を入れた場合、その関数を実行できるのか検証の上、処理の流れを説明して下さい
 */
function test6(argFunc) {
  argFunc();
}
function testFunc() {
  console.log("----- in test func");
}
test6(testFunc);

/**
 * 問6. 回答欄
 * 関数は実行できる。
 * test6はargFunc()という引数名でtestFuncを受け取り、
 * 関数内で実行する。
 * 
 * JavaScriptでは関数を変数・引数として扱えるため、
 * 関数を受け取る関数を作ることができる。
 */

/**
 * 問7. 下記test7の計算結果を変数result7に格納してください。
 * 問題文となるコードを変更して回答してください
 */
let result7 = test7();
function test7() {
  return 8 + 9;
}
console.log(result7)

/**
 * 問8. 実行された場合、実行結果として2つの引数の数の和が返される関数test8を作成してください。
 * また、この問題は無名関数(即時関数)を使用し、アロー関数として記載してください
 */
const test8 = (a, b) => a + b;
console.log(test8(1, 2))

/**
 * 問9. 無名関数(即時関数)とは何か、説明して下さい
 */

/**
 * 問9. 回答欄
 * その名の通り、名前のない関数です。
 * 一般的に関数は関数名、引数、戻り値で構成されるが、
 * JSの場合、名前を定義しなくとも関数を実行することができる。
 */

/**
 * 問10. 関数とは何か、説明してください
 */

/**
 * 問10. 回答欄
 * ある値を受け取り、処理を行い、結果を返すものです。
 * ブラックボックスともいいます。
 * 
 * 関数を使用して処理を分けることにより、可読性・保守性が上がります。
 */

/**
 * 問11. 変数とは何か、説明してください
 */

/**
 * 問11. 回答欄
 * 値が入った可変性のある名札付きの箱です。
 * 値を入れたり取り出したりすることが可能です。
 * 一方で定数というのもあり、こちらは一度定義すると再代入できません。
 */

/**
 * 問12. 引数とは何か、説明してください
 */

/**
 * 問12. 回答欄
 * 関数に渡す値です。
 * 
 */
